use serde::de::DeserializeOwned;
use serde::Deserialize;
use crate::endpoints::payment::schema::{AmountUnit, NextAction};
use crate::framework::response::{ApiResponse, JsonResult};

#[derive(Debug, Clone, Deserialize)]
pub struct CreatePaymentResponse {
    /// DianDianPay System Unique Identifier
    pub id: String,

    /// A unique order ID generated by the merchant,
    /// used for transaction tracking and customer service.
    pub merchant_order_id: String,

    /// The amount value expressed in the form of a positive integer in the
    /// smallest currency unit. For example, if the currency is USD and the
    /// amount is $1.00, set the value of this parameter to 100
    pub amount: AmountUnit,

    /// Currency code, the value is a three digit currency code that follows the ISO 4217 standard.
    pub currency: String,

    pub next_action: Option<NextAction>
}

impl JsonResult for ApiResponse<CreatePaymentResponse> {}
